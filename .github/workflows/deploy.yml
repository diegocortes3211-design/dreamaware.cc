name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_ENV: test
  DATABASE_URL: postgresql://xikizpedia:testpass@localhost:5432/xikizpedia_test
  DB_HOST: localhost
  DB_PORT: 5432
  DB_NAME: xikizpedia_test
  DB_USER: xikizpedia
  DB_PASSWORD: testpass

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: xikizpedia_test
          POSTGRES_USER: xikizpedia
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with: 
          node-version: '20'
          cache: 'npm'
      
      - name: Install root dependencies
        run: npm ci
        
      - name: Install server dependencies
        working-directory: ./server
        run: npm ci
        
      - name: Install client dependencies
        working-directory: ./client
        run: npm ci
      
      - name: Run database migrations
        run: npm run db:migrate
        
      - name: Seed test database
        run: npm run db:seed
        
      - name: Build server
        run: npm run build:server
        
      - name: Build client  
        run: npm run build:client
        
      - name: Run tests
        run: npm test
        
      - name: Test server health check
        run: |
          cd server && npm start &
          sleep 5
          curl -f http://localhost:8080/health || exit 1
          pkill -f "node.*dist/index.js" || true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with: 
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci && cd client && npm ci
        
      - name: Build for production
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with: 
          path: './client/dist'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4