name: Issue → Memory (links/terms)
on:
  issues:
    types: [opened, edited, reopened, labeled]

permissions:
  contents: write
  issues: write

jobs:
  append:
    if: contains(github.event.issue.labels.*.name, 'link') || contains(github.event.issue.labels.*.name, 'term')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Parse issue → env
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || "";
            const name = body.match(/Display Name.*\n\n(.+)/)?.[1]?.trim();
            const url = body.match(/URL.*\n\n(.+)/)?.[1]?.trim();
            const tags = body.match(/Tags.*\n\n(.+)/)?.[1]?.trim() || "";
            const term = body.match(/Term.*\n\n(.+)/)?.[1]?.trim();
            core.setOutput("name", name || "");
            core.setOutput("url", url || "");
            core.setOutput("tags", tags || "");
            core.setOutput("term", term || "");

      - name: Update memory files
        run: |
          python - <<'PY'
          import yaml, pathlib, os
          root = pathlib.Path(".")
          links = root/"memory"/"links.yml"
          terms = root/"memory"/"terms.yml"
          links.parent.mkdir(parents=True, exist_ok=True)
          for p in (links, terms):
              if not p.exists():
                  p.write_text("links: []\n" if p.name=="links.yml" else "terms: []\n", encoding="utf-8")
          with open(links, "r+", encoding="utf-8") as f:
              data = yaml.safe_load(f) or {"links":[]}
              name=os.getenv("NAME","")
              url=os.getenv("URL","")
              tags=[t.strip() for t in os.getenv("TAGS","").split(",") if t.strip()]
              if name and url:
                  data["links"].append({"name":name,"url":url,"tags":tags})
                  f.seek(0); yaml.safe_dump(data,f,sort_keys=False); f.truncate()
          with open(terms,"r+",encoding="utf-8") as f:
              data = yaml.safe_load(f) or {"terms":[]}
              term=os.getenv("TERM","")
              if term:
                  data["terms"].append(term)
                  f.seek(0); yaml.safe_dump(data,f,sort_keys=False); f.truncate()
          PY
        env:
          NAME: ${{ steps.parse.outputs.name }}
          URL: ${{ steps.parse.outputs.url }}
          TAGS: ${{ steps.parse.outputs.tags }}
          TERM: ${{ steps.parse.outputs.term }}

      - name: Rebuild link pages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python scripts/build_links.py

      - name: Commit memory update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add memory docs/links.md docs/references.md
          git commit -m "chore(memory): update from issue #${{ github.event.issue.number }}" || echo "No changes"
          git push
