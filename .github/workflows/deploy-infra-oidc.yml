name: Deploy Infra (OIDC)

on:
  pull_request:
    paths: [ "infrastructure/**", ".github/workflows/deploy-infra-oidc.yml" ]
  push:
    branches: [ "main" ]
    paths: [ "infrastructure/**", ".github/workflows/deploy-infra-oidc.yml" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # REQUIRED for OIDC
  actions: read

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: infrastructure/terraform/oidc

concurrency:
  group: deploy-infra-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: plan-${{ github.run_id }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.7.5 }

      - name: Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -input=false -no-color

  apply:
    name: Terraform Apply (protected env)
    if: github.ref == 'refs/heads/main'
    needs: plan
    environment:
      name: prod                # protect this environment in repo settings
      url: https://status.dreamaware.ai
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: apply-${{ github.run_id }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.7.5 }

      - name: Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -input=false -no-color
