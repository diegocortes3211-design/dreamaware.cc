--- a/scripts/socratic_pr.py
+++ b/scripts/socratic_pr.py
@@ -2,14 +2,26 @@
 import re

 def slop_score(md: str):
-    # Old implementation to be patched
-    emojis = len(re.findall(r"[\U0001F300-\U0001FAFF]", md))
-    emdash = md.count("—")
-    endash = md.count("–")
-    score = min(1.0, 0.02*emojis + 0.01*emdash + 0.01*endash)
-    return {"score": score, "emojis": emojis, "emdash": emdash, "endash": endash}
+    """
+    Prefer project SlopScorer; gracefully fall back to a lightweight heuristic.
+    Returns a dict with keys: score, emojis, emdash, endash
+    """
+    try:
+        from services.scorecard.slop_scorer import SlopScorer  # type: ignore
+        res = SlopScorer().score(md)
+        return {
+            "score": float(res.get("score", 0.0)),
+            "emojis": int(res.get("emojis", 0)),
+            "emdash": int(res.get("emdash", 0)),
+            "endash": int(res.get("endash", 0)),
+        }
+    except ImportError:
+        emojis = len(re.findall(r"[\U0001F300-\U0001FAFF]", md))
+        emdash = md.count("—")
+        endash = md.count("–")
+        score = min(1.0, 0.02  emojis + 0.01  emdash + 0.01 * endash)
+        return {"score": score, "emojis": emojis, "emdash": emdash, "endash": endash}

 def main():
     print("Running Socratic PR script...")

 if __name__ == "__main__":
     main()
--- a/.github/workflows/fallout-fuzz.yml
+++ b/.github/workflows/fallout-fuzz.yml
@@ -2,7 +2,7 @@
 # Placeholder for Fallout Fuzz workflow
 on:
   schedule:
-    - cron: "15 3 * * *"   # daily 03:15 UTC
+    - cron: "0 4 * * *"  # daily 04:00 UTC
   workflow_dispatch:

 jobs: