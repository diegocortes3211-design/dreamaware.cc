apiVersion: v1
kind: ServiceAccount
metadata:
  name: llm-service
  namespace: dreamaware-staging
  labels: { app.kubernetes.io/part-of: video-generation }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-service
  namespace: dreamaware-staging
  labels: { app.kubernetes.io/part-of: video-generation }
spec:
  replicas: 3
  selector: { matchLabels: { app: llm-service } }
  template:
    metadata:
      labels:
        app: llm-service
        app.kubernetes.io/part-of: video-generation
    spec:
      serviceAccountName: llm-service
      containers:
        - name: llm
          image: dreamaware/llm-service:v1.0.0
          ports: [{ containerPort: 8081 }]
          env:
            - name: VAULT_ADDR
              value: http://vault.vault.svc.cluster.local:8200
            - name: COCKROACH_URL
              valueFrom:
                secretKeyRef: { name: cockroach-credentials, key: url }
            - name: SERVICE_NAME
              value: llm-service
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          livenessProbe: { httpGet: { path: /health, port: 8081 }, initialDelaySeconds: 10, periodSeconds: 30 }
          readinessProbe: { httpGet: { path: /ready, port: 8081 }, initialDelaySeconds: 5, periodSeconds: 10 }
---
apiVersion: v1
kind: Service
metadata:
  name: llm-service
  namespace: dreamaware-staging
  labels: { app.kubernetes.io/part-of: video-generation }
spec:
  selector: { app: llm-service }
  ports: [{ port: 8081, targetPort: 8081 }]
